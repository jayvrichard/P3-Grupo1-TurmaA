/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JFrame.java to edit this template
 */
package Telas;

import Classes.CrudPedido;
import Classes.ItensPedido;
import Classes.Local;
import Classes.Retirar;
import static Telas.TelaDeCardapio.item;
import static Telas.TelaDeCardapio.produto;
import java.sql.Date;
import java.sql.Time;
import java.time.LocalDate;
import java.time.LocalTime;
import javax.swing.JOptionPane;

/**
 *
 * @author ruy_s
 */
public class TelaDePagamento extends javax.swing.JFrame {

    /**
     * Creates new form TelaDePagamento
     */
    public TelaDePagamento() {
        initComponents();
    }

    public static int senha = 100;

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jPanel1 = new javax.swing.JPanel();
        btnPix = new javax.swing.JButton();
        btnDebito = new javax.swing.JButton();
        btnDinheiro = new javax.swing.JButton();
        btnRetorno = new javax.swing.JButton();
        btnVr = new javax.swing.JButton();
        btnCredito = new javax.swing.JButton();
        jLabel1 = new javax.swing.JLabel();
        btnCancelar = new javax.swing.JButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        jPanel1.setBackground(new java.awt.Color(255, 102, 0));

        btnPix.setBackground(new java.awt.Color(0, 0, 0));
        btnPix.setFont(new java.awt.Font("Yu Gothic UI Semibold", 1, 18)); // NOI18N
        btnPix.setForeground(new java.awt.Color(255, 255, 0));
        btnPix.setText("PIX");
        btnPix.setBorder(new javax.swing.border.SoftBevelBorder(javax.swing.border.BevelBorder.LOWERED));
        btnPix.setBorderPainted(false);
        btnPix.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        btnPix.setVerticalAlignment(javax.swing.SwingConstants.BOTTOM);
        btnPix.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnPixActionPerformed(evt);
            }
        });

        btnDebito.setBackground(new java.awt.Color(0, 0, 0));
        btnDebito.setFont(new java.awt.Font("Yu Gothic UI Semibold", 1, 18)); // NOI18N
        btnDebito.setForeground(new java.awt.Color(255, 255, 0));
        btnDebito.setText("Cartão de Debito");
        btnDebito.setBorder(new javax.swing.border.SoftBevelBorder(javax.swing.border.BevelBorder.LOWERED));
        btnDebito.setBorderPainted(false);
        btnDebito.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        btnDebito.setVerticalAlignment(javax.swing.SwingConstants.BOTTOM);
        btnDebito.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnDebitoActionPerformed(evt);
            }
        });

        btnDinheiro.setBackground(new java.awt.Color(0, 0, 0));
        btnDinheiro.setFont(new java.awt.Font("Yu Gothic UI Semibold", 1, 18)); // NOI18N
        btnDinheiro.setForeground(new java.awt.Color(255, 255, 0));
        btnDinheiro.setText("Dinheiro");
        btnDinheiro.setBorder(new javax.swing.border.SoftBevelBorder(javax.swing.border.BevelBorder.LOWERED));
        btnDinheiro.setBorderPainted(false);
        btnDinheiro.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        btnDinheiro.setVerticalAlignment(javax.swing.SwingConstants.BOTTOM);
        btnDinheiro.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnDinheiroActionPerformed(evt);
            }
        });

        btnRetorno.setBackground(new java.awt.Color(255, 255, 255));
        btnRetorno.setFont(new java.awt.Font("Book Antiqua", 1, 18)); // NOI18N
        btnRetorno.setText("Retornar");
        btnRetorno.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        btnRetorno.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnRetornoActionPerformed(evt);
            }
        });

        btnVr.setBackground(new java.awt.Color(0, 0, 0));
        btnVr.setFont(new java.awt.Font("Yu Gothic UI Semibold", 1, 18)); // NOI18N
        btnVr.setForeground(new java.awt.Color(255, 255, 0));
        btnVr.setText("VR");
        btnVr.setBorder(new javax.swing.border.SoftBevelBorder(javax.swing.border.BevelBorder.LOWERED));
        btnVr.setBorderPainted(false);
        btnVr.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        btnVr.setVerticalAlignment(javax.swing.SwingConstants.BOTTOM);
        btnVr.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnVrActionPerformed(evt);
            }
        });

        btnCredito.setBackground(new java.awt.Color(0, 0, 0));
        btnCredito.setFont(new java.awt.Font("Yu Gothic UI Semibold", 1, 18)); // NOI18N
        btnCredito.setForeground(new java.awt.Color(255, 255, 0));
        btnCredito.setText("Cartão de Credito");
        btnCredito.setBorder(new javax.swing.border.SoftBevelBorder(javax.swing.border.BevelBorder.LOWERED));
        btnCredito.setBorderPainted(false);
        btnCredito.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        btnCredito.setVerticalAlignment(javax.swing.SwingConstants.BOTTOM);
        btnCredito.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnCreditoActionPerformed(evt);
            }
        });

        jLabel1.setFont(new java.awt.Font("Arial", 1, 48)); // NOI18N
        jLabel1.setText("Escolha a forma de pagamento:");

        btnCancelar.setBackground(new java.awt.Color(255, 255, 255));
        btnCancelar.setFont(new java.awt.Font("Book Antiqua", 1, 18)); // NOI18N
        btnCancelar.setText("Cancelar");
        btnCancelar.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        btnCancelar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnCancelarActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGap(39, 39, 39)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addComponent(btnRetorno, javax.swing.GroupLayout.PREFERRED_SIZE, 125, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(btnCancelar, javax.swing.GroupLayout.PREFERRED_SIZE, 125, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(64, 64, 64))
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(jPanel1Layout.createSequentialGroup()
                                .addComponent(btnCredito, javax.swing.GroupLayout.DEFAULT_SIZE, 250, Short.MAX_VALUE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(btnDebito, javax.swing.GroupLayout.DEFAULT_SIZE, 250, Short.MAX_VALUE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(btnDinheiro, javax.swing.GroupLayout.DEFAULT_SIZE, 250, Short.MAX_VALUE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(btnPix, javax.swing.GroupLayout.PREFERRED_SIZE, 250, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(btnVr, javax.swing.GroupLayout.DEFAULT_SIZE, 250, Short.MAX_VALUE))
                            .addComponent(jLabel1))
                        .addGap(49, 49, 49))))
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGap(47, 47, 47)
                .addComponent(jLabel1)
                .addGap(120, 120, 120)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(btnPix, javax.swing.GroupLayout.PREFERRED_SIZE, 354, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(btnDebito, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(btnDinheiro, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(btnVr, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(btnCredito, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addGap(157, 157, 157)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(btnRetorno)
                    .addComponent(btnCancelar))
                .addContainerGap())
        );

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel1, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );

        pack();
        setLocationRelativeTo(null);
    }// </editor-fold>//GEN-END:initComponents

    private void btnRetornoActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnRetornoActionPerformed
        TelaDeSacola x = new TelaDeSacola();
        x.setVisible(true);
        this.dispose();
    }//GEN-LAST:event_btnRetornoActionPerformed

    private void btnPixActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnPixActionPerformed
        // TODO add your handling code here:
        Object[] options = {"Sim", "Não"};
        int op = 0;
        op = JOptionPane.showOptionDialog(null, "Deseja Comprar por pix ?", "Pagamento", JOptionPane.DEFAULT_OPTION, JOptionPane.QUESTION_MESSAGE, null, options, options[0]);
        if (op == 0) {
            if (frmPedido.tipo == 1) {
                double vt = 0;
                for (ItensPedido i : TelaDeCardapio.item) {
                    vt += i.valorTotal(i);
                };
                System.out.println(vt);
                try {
                    Classes.CrudPedido inserir = new Classes.CrudPedido();
                    Local local = new Local();
                    local.setData(Date.valueOf(LocalDate.now()));
                    local.setHora(Time.valueOf(LocalTime.now()));
                    local.setValor(vt);
                    local.setPagamento("PIX");
                    local.setSenha(senha);
                    senha++;
                    System.out.println(inserir.inserir(local));
                    Classes.CrudPedido inserir2 = new Classes.CrudPedido();
                    for (ItensPedido i : TelaDeCardapio.item) {
                        System.out.println(inserir2.inserir(i));
                    };
                    JOptionPane.showMessageDialog(null, "Comanda emitida");
                    produto.removeAll(produto);
                    item.removeAll(item);
                    frmPedido x = new frmPedido();
                    x.setVisible(true);
                    this.dispose();
                } catch (NullPointerException ex) {
                    System.err.println("Erro: " + ex);
                }
            } else if (frmPedido.tipo == 2) {
                double vt = 0;
                for (ItensPedido i : TelaDeCardapio.item) {
                    vt += i.valorTotal(i);
                };
                System.out.println(vt);
                try {
                    Classes.CrudPedido inserir = new Classes.CrudPedido();
                    Retirar retirar = new Retirar();
                    retirar.setData(Date.valueOf(LocalDate.now()));
                    retirar.setHora(Time.valueOf(LocalTime.now()));
                    retirar.setValor(vt);
                    retirar.setPagamento("PIX");
                    retirar.setNome(JOptionPane.showInputDialog("Insira o Nome"));
                    retirar.setHoraRetirar(JOptionPane.showInputDialog("Insira a hora da retirada"));
                    System.out.println(inserir.inserir(retirar));
                    Classes.CrudPedido inserir2 = new Classes.CrudPedido();
                    for (ItensPedido i : TelaDeCardapio.item) {
                        System.out.println(inserir2.inserir(i));
                    };
                    JOptionPane.showMessageDialog(null, "Comanda emitida");
                    produto.removeAll(produto);
                    item.removeAll(item);
                    frmPedido x = new frmPedido();
                    x.setVisible(true);
                    this.dispose();
                } catch (NullPointerException ex) {
                    System.err.println("Erro: " + ex);
                }
            }
        }
    }//GEN-LAST:event_btnPixActionPerformed

    private void btnDebitoActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnDebitoActionPerformed
        // TODO add your handling code here:
        Object[] options = {"Sim", "Não"};
        int op = 0;
        op = JOptionPane.showOptionDialog(null, "Deseja Comprar por Debito ?", "Pagamento", JOptionPane.DEFAULT_OPTION, JOptionPane.QUESTION_MESSAGE, null, options, options[0]);
        if (op == 0) {
            if (frmPedido.tipo == 1) {
                double vt = 0;
                for (ItensPedido i : TelaDeCardapio.item) {
                    vt += i.valorTotal(i);
                };
                System.out.println(vt);
                try {
                    Classes.CrudPedido inserir = new Classes.CrudPedido();
                    Local local = new Local();
                    local.setData(Date.valueOf(LocalDate.now()));
                    local.setHora(Time.valueOf(LocalTime.now()));
                    local.setValor(vt);
                    local.setPagamento("Debito");
                    local.setSenha(senha);
                    senha++;
                    System.out.println(inserir.inserir(local));
                    Classes.CrudPedido inserir2 = new Classes.CrudPedido();
                    for (ItensPedido i : TelaDeCardapio.item) {
                        System.out.println(inserir2.inserir(i));
                    };
                    JOptionPane.showMessageDialog(null, "Comanda emitida");
                    produto.removeAll(produto);
                    item.removeAll(item);
                    frmPedido x = new frmPedido();
                    x.setVisible(true);
                    this.dispose();

                } catch (NullPointerException ex) {
                    System.err.println("Erro: " + ex);
                }
            } else if (frmPedido.tipo == 2) {
                double vt = 0;
                for (ItensPedido i : TelaDeCardapio.item) {
                    vt += i.valorTotal(i);
                };
                System.out.println(vt);
                try {
                    Classes.CrudPedido inserir = new Classes.CrudPedido();
                    Retirar retirar = new Retirar();
                    retirar.setData(Date.valueOf(LocalDate.now()));
                    retirar.setHora(Time.valueOf(LocalTime.now()));
                    retirar.setValor(vt);
                    retirar.setPagamento("Debito");
                    retirar.setNome(JOptionPane.showInputDialog("Insira o Nome"));
                    retirar.setHoraRetirar(JOptionPane.showInputDialog("Insira a hora da retirada"));
                    System.out.println(inserir.inserir(retirar));
                    Classes.CrudPedido inserir2 = new Classes.CrudPedido();
                    for (ItensPedido i : TelaDeCardapio.item) {
                        System.out.println(inserir2.inserir(i));
                    };
                    JOptionPane.showMessageDialog(null, "Comanda emitida");
                    produto.removeAll(produto);
                    item.removeAll(item);
                    frmPedido x = new frmPedido();
                    x.setVisible(true);
                    this.dispose();
                } catch (NullPointerException ex) {
                    System.err.println("Erro: " + ex);
                }
            }
        }
    }//GEN-LAST:event_btnDebitoActionPerformed

    private void btnDinheiroActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnDinheiroActionPerformed
        // TODO add your handling code here:
        Object[] options = {"Sim", "Não"};
        int op = 0;
        op = JOptionPane.showOptionDialog(null, "Deseja Comprar por Dinheiro ?", "Pagamento", JOptionPane.DEFAULT_OPTION, JOptionPane.QUESTION_MESSAGE, null, options, options[0]);
        if (op == 0) {
            if (frmPedido.tipo == 1) {
                double vt = 0;
                for (ItensPedido i : TelaDeCardapio.item) {
                    vt += i.valorTotal(i);
                };
                System.out.println(vt);
                try {
                    Classes.CrudPedido inserir = new Classes.CrudPedido();
                    Local local = new Local();
                    local.setData(Date.valueOf(LocalDate.now()));
                    local.setHora(Time.valueOf(LocalTime.now()));
                    local.setValor(vt);
                    local.setPagamento("Dinheiro");
                    local.setSenha(senha);
                    senha++;
                    System.out.println(inserir.inserir(local));
                    Classes.CrudPedido inserir2 = new Classes.CrudPedido();
                    for (ItensPedido i : TelaDeCardapio.item) {
                        System.out.println(inserir2.inserir(i));
                    };
                    JOptionPane.showMessageDialog(null, "Comanda emitida");
                    produto.removeAll(produto);
                    item.removeAll(item);
                    frmPedido x = new frmPedido();
                    x.setVisible(true);
                    this.dispose();
                } catch (NullPointerException ex) {
                    System.err.println("Erro: " + ex);
                }
            } else if (frmPedido.tipo == 2) {
                double vt = 0;
                for (ItensPedido i : TelaDeCardapio.item) {
                    vt += i.valorTotal(i);
                };
                System.out.println(vt);
                try {
                    Classes.CrudPedido inserir = new Classes.CrudPedido();
                    Retirar retirar = new Retirar();
                    retirar.setData(Date.valueOf(LocalDate.now()));
                    retirar.setHora(Time.valueOf(LocalTime.now()));
                    retirar.setValor(vt);
                    retirar.setPagamento("Dinheiro");
                    retirar.setNome(JOptionPane.showInputDialog("Insira o Nome"));
                    retirar.setHoraRetirar(JOptionPane.showInputDialog("Insira a hora da retirada"));
                    System.out.println(inserir.inserir(retirar));
                    Classes.CrudPedido inserir2 = new Classes.CrudPedido();
                    for (ItensPedido i : TelaDeCardapio.item) {
                        System.out.println(inserir2.inserir(i));
                    };
                    JOptionPane.showMessageDialog(null, "Comanda emitida");
                    produto.removeAll(produto);
                    item.removeAll(item);
                    frmPedido x = new frmPedido();
                    x.setVisible(true);
                    this.dispose();
                } catch (NullPointerException ex) {
                    System.err.println("Erro: " + ex);
                }
            }
        }
    }//GEN-LAST:event_btnDinheiroActionPerformed

    private void btnVrActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnVrActionPerformed
        // TODO add your handling code here:
        Object[] options = {"Sim", "Não"};
        int op = 0;
        op = JOptionPane.showOptionDialog(null, "Deseja Comprar por VR ?", "Pagamento", JOptionPane.DEFAULT_OPTION, JOptionPane.QUESTION_MESSAGE, null, options, options[0]);
        if (op == 0) {
            if (frmPedido.tipo == 1) {
                double vt = 0;
                for (ItensPedido i : TelaDeCardapio.item) {
                    vt += i.valorTotal(i);
                };
                System.out.println(vt);
                try {
                    Classes.CrudPedido inserir = new Classes.CrudPedido();
                    Local local = new Local();
                    local.setData(Date.valueOf(LocalDate.now()));
                    local.setHora(Time.valueOf(LocalTime.now()));
                    local.setValor(vt);
                    local.setPagamento("VR");
                    local.setSenha(senha);
                    senha++;
                    System.out.println(inserir.inserir(local));
                    Classes.CrudPedido inserir2 = new Classes.CrudPedido();
                    for (ItensPedido i : TelaDeCardapio.item) {
                        System.out.println(inserir2.inserir(i));
                    };
                    JOptionPane.showMessageDialog(null, "Comanda emitida");
                    produto.removeAll(produto);
                    item.removeAll(item);
                    frmPedido x = new frmPedido();
                    x.setVisible(true);
                    this.dispose();
                } catch (NullPointerException ex) {
                    System.err.println("Erro: " + ex);
                }
            } else if (frmPedido.tipo == 2) {
                double vt = 0;
                for (ItensPedido i : TelaDeCardapio.item) {
                    vt += i.valorTotal(i);
                };
                System.out.println(vt);
                try {
                    Classes.CrudPedido inserir = new Classes.CrudPedido();
                    Retirar retirar = new Retirar();
                    retirar.setData(Date.valueOf(LocalDate.now()));
                    retirar.setHora(Time.valueOf(LocalTime.now()));
                    retirar.setValor(vt);
                    retirar.setPagamento("VR");
                    retirar.setNome(JOptionPane.showInputDialog("Insira o Nome"));
                    retirar.setHoraRetirar(JOptionPane.showInputDialog("Insira a hora da retirada"));
                    System.out.println(inserir.inserir(retirar));
                    Classes.CrudPedido inserir2 = new Classes.CrudPedido();
                    for (ItensPedido i : TelaDeCardapio.item) {
                        System.out.println(inserir2.inserir(i));
                    };
                    JOptionPane.showMessageDialog(null, "Comanda emitida");
                    produto.removeAll(produto);
                    item.removeAll(item);
                    frmPedido x = new frmPedido();
                    x.setVisible(true);
                    this.dispose();
                } catch (NullPointerException ex) {
                    System.err.println("Erro: " + ex);
                }
            }
        }
    }//GEN-LAST:event_btnVrActionPerformed

    private void btnCreditoActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnCreditoActionPerformed
        // TODO add your handling code here:
        Object[] options = {"Sim", "Não"};
        int op = 0;
        op = JOptionPane.showOptionDialog(null, "Deseja Comprar por Credito ?", "Pagamento", JOptionPane.DEFAULT_OPTION, JOptionPane.QUESTION_MESSAGE, null, options, options[0]);
        if (op == 0) {
            if (frmPedido.tipo == 1) {
                double vt = 0;
                for (ItensPedido i : TelaDeCardapio.item) {
                    vt += i.valorTotal(i);
                };
                System.out.println(vt);
                try {
                    Classes.CrudPedido inserir = new Classes.CrudPedido();
                    Local local = new Local();
                    local.setData(Date.valueOf(LocalDate.now()));
                    local.setHora(Time.valueOf(LocalTime.now()));
                    local.setValor(vt);
                    local.setPagamento("Credito");
                    local.setSenha(senha);
                    senha++;
                    System.out.println(inserir.inserir(local));
                    Classes.CrudPedido inserir2 = new Classes.CrudPedido();
                    for (ItensPedido i : TelaDeCardapio.item) {
                        System.out.println(inserir2.inserir(i));
                    };
                    JOptionPane.showMessageDialog(null, "Comanda emitida");
                    produto.removeAll(produto);
                    item.removeAll(item);
                    frmPedido x = new frmPedido();
                    x.setVisible(true);
                    this.dispose();
                } catch (NullPointerException ex) {
                    System.err.println("Erro: " + ex);
                }
            } else if (frmPedido.tipo == 2) {
                double vt = 0;
                for (ItensPedido i : TelaDeCardapio.item) {
                    vt += i.valorTotal(i);
                };
                System.out.println(vt);
                try {
                    Classes.CrudPedido inserir = new Classes.CrudPedido();
                    Retirar retirar = new Retirar();
                    retirar.setData(Date.valueOf(LocalDate.now()));
                    retirar.setHora(Time.valueOf(LocalTime.now()));
                    retirar.setValor(vt);
                    retirar.setPagamento("Credito");
                    retirar.setNome(JOptionPane.showInputDialog("Insira o Nome"));
                    retirar.setHoraRetirar(JOptionPane.showInputDialog("Insira a hora da retirada"));
                    System.out.println(inserir.inserir(retirar));
                    Classes.CrudPedido inserir2 = new Classes.CrudPedido();
                    for (ItensPedido i : TelaDeCardapio.item) {
                        System.out.println(inserir2.inserir(i));
                    };
                    JOptionPane.showMessageDialog(null, "Comanda emitida");
                    produto.removeAll(produto);
                    item.removeAll(item);
                    frmPedido x = new frmPedido();
                    x.setVisible(true);
                    this.dispose();
                } catch (NullPointerException ex) {
                    System.err.println("Erro: " + ex);
                }
            }
        }
    }//GEN-LAST:event_btnCreditoActionPerformed

    private void btnCancelarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnCancelarActionPerformed
        // TODO add your handling code here:
        Object[] options = {"Sim", "Não"};
        int op = 0;
        op = JOptionPane.showOptionDialog(null, "Deseja Cancelar a compra", "Cancelar", JOptionPane.DEFAULT_OPTION, JOptionPane.QUESTION_MESSAGE, null, options, options[0]);
        if (op == 0) {
            produto.removeAll(produto);
            item.removeAll(item);
            frmPedido x = new frmPedido();
            x.setVisible(true);
            this.dispose();
        }
    }//GEN-LAST:event_btnCancelarActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(TelaDePagamento.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(TelaDePagamento.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(TelaDePagamento.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(TelaDePagamento.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new TelaDePagamento().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btnCancelar;
    private javax.swing.JButton btnCredito;
    private javax.swing.JButton btnDebito;
    private javax.swing.JButton btnDinheiro;
    private javax.swing.JButton btnPix;
    private javax.swing.JButton btnRetorno;
    private javax.swing.JButton btnVr;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JPanel jPanel1;
    // End of variables declaration//GEN-END:variables
}
